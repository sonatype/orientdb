/* Generated By:JJTree: Do not edit this line. OHaSyncDatabaseStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=O,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.orientechnologies.orient.core.sql.parser;

import com.orientechnologies.orient.core.command.OCommandContext;
import com.orientechnologies.orient.core.db.ODatabase;
import com.orientechnologies.orient.core.sql.OCommandSQL;
import com.orientechnologies.orient.core.sql.executor.OIteratorResultSet;
import com.orientechnologies.orient.core.sql.executor.OResultSet;

import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OHaSyncDatabaseStatement extends OStatement {

  public boolean force = false;
  public boolean full  = false;

  public OHaSyncDatabaseStatement(int id) {
    super(id);
  }

  public OHaSyncDatabaseStatement(OrientSql p, int id) {
    super(p, id);
  }

  /**
   * Accept the visitor.
   **/
  public Object jjtAccept(OrientSqlVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }

  @Override
  public void toString(Map<Object, Object> params, StringBuilder builder) {
    builder.append("HA SYNC DATABASE");
    if (force) {
      builder.append(" -force");
    }
    if (full) {
      builder.append(" -full");
    }
  }

  public boolean isForce() {
    return force;
  }

  public boolean isFull() {
    return full;
  }

  @Override
  public OResultSet execute(ODatabase db, Object[] args, OCommandContext parentContext) {
    StringBuilder builder = new StringBuilder();
    Map<Object, Object> pars = new HashMap<>();
    for (int i = 0; i < args.length; i++) {
      pars.put(Integer.toString(i + 1), args[i]);
    }
    toString(pars, builder);
    Object result = db.command(new OCommandSQL(builder.toString())).execute();
    List listResult;
    if (result instanceof List) {
      listResult = (List) result;
    } else {
      listResult = Collections.singletonList(result);
    }
    return new OIteratorResultSet(listResult.iterator());
  }

  @Override
  public OResultSet execute(ODatabase db, Map args, OCommandContext parentContext) {
    StringBuilder builder = new StringBuilder();
    toString(args, builder);
    Object result = db.command(new OCommandSQL(builder.toString())).execute();
    List listResult;
    if (result instanceof List) {
      listResult = (List) result;
    } else {
      listResult = Collections.singletonList(result);
    }
    return new OIteratorResultSet(listResult.iterator());
  }
}
/* JavaCC - OriginalChecksum=f2c9070be78798e3093a98669129ce0d (do not edit this line) */
