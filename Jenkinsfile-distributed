#!groovy
node("master") {
    def mvnHome = tool 'mvn'
    def mvnJdk8Image = "orientdb/mvn-gradle-zulu-jdk-8:20161125"

    stage('Source checkout') {

        checkout scm
    }

    try {

        stage('Run distributed test on Java8') {

            timeout(time: 180, unit: 'MINUTES') {
                docker.image("${mvnJdk8Image}")
                        .inside("${env.VOLUMES}") {

                        sh "${mvnHome}/bin/mvn   --batch-mode -V -U -e -Dmaven.test.failure.ignore=true  clean package -Dsurefire.useFile=false -DskipTests=true"
                        sh "${mvnHome}/bin/mvn  -f distributed/pom.xml  --batch-mode -V -e -Dmaven.test.failure.ignore=true  clean test -Dsurefire.useFile=false -DskipTests=false"

                }
            }

        }

        slackSend(color: 'good', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

    } catch (e) {
        slackSend(color: 'bad', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        currentBuild.result = 'FAILURE'

    } finally {
        junit allowEmptyResults: true, testResults: '**/target/surefire-reports/TEST-*.xml'

    }

}

